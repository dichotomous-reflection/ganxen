from os import listdir
from numpy import asarray
from numpy import vstack
from keras.preprocessing.image import img_to_array
from keras.preprocessing.image import load_img
from numpy import savez_compressed
import torch
from torchvision import transforms
from PIL import Image

transform=transforms.Compose([
    
    transforms.RandomHorizontalFlip(),
    transforms.ToTensor(),
    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])
# load all images in a directory into memory
def load_images(path, size=(256,256)):
    data_list = list()
    n=0
    
    for filename in listdir(path):
        n+=1
        # load and resize the image
        pixels = load_img(path + filename, target_size=size)
        # convert to numpy array
        pixels = transform(pixels)
        pixels = img_to_array(pixels)
       
        data_list.append(pixels)
        # memory is limited, so...
        if n>=500:
            break
    return asarray(data_list)
def load_image2(img, size=(256,256)):
    
    pixels = transform2(img)
    pixels = img_to_array(pixels)
    
    return pixels
